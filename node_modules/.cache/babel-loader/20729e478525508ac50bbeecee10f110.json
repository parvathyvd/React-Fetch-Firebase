{"ast":null,"code":"var _jsxFileName = \"/Users/paru/Documents/test-projects/react-projects/30-react-DB-connection/src/App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMoviesHandler = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const res = await fetch('https://swapi.dev/api/films');\n      const movies = await res.json();\n      console.log(movies);\n      const trasformedMovies = movies.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(trasformedMovies);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 45\n    }\n  }), !isLoading && movies.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 47\n    }\n  }, \"Found no movies!\"), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  }, \"Loading....\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/paru/Documents/test-projects/react-projects/30-react-DB-connection/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setLoading","error","setError","fetchMoviesHandler","res","fetch","json","console","log","trasformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","err","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,UAAZ,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AAED,QAAMS,kBAAkB,GAAG,YAAW;AACpC,QAAG;AACDH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,YAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,YAAMR,MAAM,GAAG,MAAMO,GAAG,CAACE,IAAJ,EAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACA,YAAMY,gBAAgB,GAAGZ,MAAM,CAACa,OAAP,CAAeC,GAAf,CAAoBC,SAAD,IAAa;AACrD,eAAM;AACJC,UAAAA,EAAE,EAAED,SAAS,CAACE,UADV;AAEJC,UAAAA,KAAK,EAAEH,SAAS,CAACG,KAFb;AAGJC,UAAAA,WAAW,EAAEJ,SAAS,CAACK,aAHnB;AAIJC,UAAAA,WAAW,EAAEN,SAAS,CAACO;AAJnB,SAAN;AAMH,OAPwB,CAAzB;AAQArB,MAAAA,SAAS,CAACW,gBAAD,CAAT;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAhBD,CAiBA,OAAMoB,GAAN,EAAU;AACRb,MAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACD;AACF,GArBD;;AAsBE,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEjB,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACJ,SAAD,IAAcF,MAAM,CAACwB,MAAP,GAAgB,CAA9B,iBAAmC,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAExB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtC,EAEG,CAACE,SAAD,IAAcF,MAAM,CAACwB,MAAP,KAAkB,CAAhC,iBAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFxC,EAGGtB,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHhB,CAJF,CADF;AAYD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n const [movies, setMovies] = useState([])\n const [isLoading, setLoading] = useState(false)\n const [error, setError] = useState(null);\n\nconst fetchMoviesHandler = async() => {\n  try{\n    setLoading(true)\n    setError(null)\n    const res = await fetch('https://swapi.dev/api/films');\n    const movies = await res.json()\n    console.log(movies);\n    const trasformedMovies = movies.results.map((movieData)=>{\n        return{\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        }\n    })\n    setMovies(trasformedMovies)\n    setLoading(false)\n  }\n  catch(err){\n    console.log(err)\n  }\n}\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies}  />}\n        {!isLoading && movies.length === 0 && <p>Found no movies!</p>}\n        {isLoading && <p>Loading....</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}